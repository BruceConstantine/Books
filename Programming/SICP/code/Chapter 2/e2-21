(define (square-list items) 
	(if (null? items)
		'()
		(cons (square (car items)) (square-list (cdr items))))
)
(square-list (list 1 2 3 4))

; first implement

(define (square-list-2 items)
	(map (lambda (x) (square x)) items)
)
(square-list-2 (list 1 2 3 4))

; second implement
