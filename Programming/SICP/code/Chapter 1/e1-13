(define (check n)
	(define (fib n)
		(define (fib-iter a b step)
			(cond ((= step 0) (+ a b))
						(else (fib-iter b (+ a b) (- step 1)))
			)
		)
		(cond ((< n 2) n)
					(else (fib-iter 0 1 (- n 2)))			
		)
	)
	(define (xx n)
		(/ (- (expt (/ (+ 1 (sqrt 5.0)) 2) n) (expt (/ (- 1 (sqrt 5.0)) 2) n)) (sqrt 5.0))
	)
	(display (fib n))
	(display "\n")
	(display (xx n))
)
(check 9)