(define (even? n)
	(= (remainder n 2) 0)
)
(define (sum term a next b) (if (> a b)
	0
	(+ (term a)
  	(sum term (next a) next b)))
  )
(define (integral f a b n)
	(define (next x)
    (+ x 1)
  )
  (define (h) (/ (- b a) n))
  (define (add-it x)
  	(cond ((= x 0) (f (+ a (* x (h)))))
  				((= x n) (f (+ a (* x (h)))))
  				((even? x) (* 2 (f (+ a (* x (h))))))
    			(else (* 4 (f (+ a (* x (h))))))
    )
  )
  (* (/ (h) 3.0) (sum add-it 0 next n))
)
(define (cube x) (* x x x))
(integral cube 0 1 1000)