(define (even? n)
	(= (remainder n 2) 0)
)
(define (* a b) (if (= b 0)
      0
      (+ a (* a (- b 1)))))
(define (double x) (* x 2))
(define (halve x) (/ x 2))
(define (exp-iter b n)
	(define (exp-iter-internal a b n)
		(cond ((= n 1) (* a b))
					((even? n) (exp-iter-internal a (* b b) (halve n)))
					(else (exp-iter-internal (* a b) (* b b) (halve (- n 1))))
		)
	)
	(exp-iter-internal 1 b n)
)
(exp-iter 2 10)